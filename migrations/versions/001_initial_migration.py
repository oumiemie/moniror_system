"""Initial migration with corrected data types

Revision ID: 001_initial
Revises: 
Create Date: 2025-01-20 00:30:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '001_initial'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Create users table
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False, comment='用户名，唯一'),
    sa.Column('password', sa.String(length=255), nullable=False, comment='密码，已加密'),
    sa.Column('email', sa.String(length=100), nullable=False, comment='邮箱地址，用于告警通知'),
    sa.Column('role', sa.Enum('admin', 'user', name='role'), nullable=True, comment='用户角色：admin管理员，user普通用户'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    
    # Create servers table
    op.create_table('servers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('server_name', sa.String(length=100), nullable=False, comment='服务器名称'),
    sa.Column('ip_address', sa.String(length=45), nullable=False, comment='服务器IP地址，支持IPv4和IPv6'),
    sa.Column('port', sa.Integer(), nullable=True, comment='SSH端口，默认22'),
    sa.Column('status', sa.Enum('online', 'offline', name='status'), nullable=True, comment='服务器状态：online在线，offline离线'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ip_address')
    )
    
    # Create server_users association table
    op.create_table('server_users',
    sa.Column('server_id', sa.Integer(), nullable=False, comment='服务器ID'),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='用户ID'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='关联创建时间'),
    sa.ForeignKeyConstraint(['server_id'], ['servers.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('server_id', 'user_id')
    )
    
    # Create monitor_data table
    op.create_table('monitor_data',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('server_id', sa.Integer(), nullable=False, comment='关联的服务器ID'),
    sa.Column('cpu_value', sa.DECIMAL(precision=5, scale=2), nullable=False, comment='CPU使用率，保留2位小数'),
    sa.Column('memory_value', sa.DECIMAL(precision=5, scale=2), nullable=False, comment='内存使用率，保留2位小数'),
    sa.Column('disk_value', sa.DECIMAL(precision=5, scale=2), nullable=False, comment='磁盘使用率，保留2位小数'),
    sa.Column('recorded_at', sa.DateTime(), nullable=True, comment='数据记录时间'),
    sa.ForeignKeyConstraint(['server_id'], ['servers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('monitor_data')
    op.drop_table('server_users')
    op.drop_table('servers')
    op.drop_table('users')
    # ### end Alembic commands ###
